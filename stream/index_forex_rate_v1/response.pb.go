// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: sdk/stream/index_forex_rate_v1/response.proto

package index_forex_rate_v1

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	core "github.com/kaikodata/kaiko-go-sdk/core"
	index_v1 "github.com/kaikodata/kaiko-go-sdk/stream/index_v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StreamForexIndexPublic is public property involved in computation.
type StreamForexIndexPublic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// TSEvent.
	TsEvent *timestamp.Timestamp `protobuf:"bytes,2,opt,name=ts_event,json=tsEvent,proto3" json:"ts_event,omitempty"`
}

func (x *StreamForexIndexPublic) Reset() {
	*x = StreamForexIndexPublic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamForexIndexPublic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamForexIndexPublic) ProtoMessage() {}

func (x *StreamForexIndexPublic) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamForexIndexPublic.ProtoReflect.Descriptor instead.
func (*StreamForexIndexPublic) Descriptor() ([]byte, []int) {
	return file_sdk_stream_index_forex_rate_v1_response_proto_rawDescGZIP(), []int{0}
}

func (x *StreamForexIndexPublic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StreamForexIndexPublic) GetTsEvent() *timestamp.Timestamp {
	if x != nil {
		return x.TsEvent
	}
	return nil
}

// StreamForexIndexDetail is detail property involved in computation.
type StreamForexIndexDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Price
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	// TSEvent.
	TsEvent *timestamp.Timestamp `protobuf:"bytes,3,opt,name=ts_event,json=tsEvent,proto3" json:"ts_event,omitempty"`
}

func (x *StreamForexIndexDetail) Reset() {
	*x = StreamForexIndexDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamForexIndexDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamForexIndexDetail) ProtoMessage() {}

func (x *StreamForexIndexDetail) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamForexIndexDetail.ProtoReflect.Descriptor instead.
func (*StreamForexIndexDetail) Descriptor() ([]byte, []int) {
	return file_sdk_stream_index_forex_rate_v1_response_proto_rawDescGZIP(), []int{1}
}

func (x *StreamForexIndexDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StreamForexIndexDetail) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *StreamForexIndexDetail) GetTsEvent() *timestamp.Timestamp {
	if x != nil {
		return x.TsEvent
	}
	return nil
}

// StreamForexIndexServiceResponseDetail is detail property involved in computation.
type StreamForexIndexServiceResponseDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Underlying.
	Underlying *StreamForexIndexDetail `protobuf:"bytes,1,opt,name=underlying,proto3" json:"underlying,omitempty"`
	// FxRate.
	Fxrate *StreamForexIndexDetail `protobuf:"bytes,2,opt,name=fxrate,proto3" json:"fxrate,omitempty"`
}

func (x *StreamForexIndexServiceResponseDetail) Reset() {
	*x = StreamForexIndexServiceResponseDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamForexIndexServiceResponseDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamForexIndexServiceResponseDetail) ProtoMessage() {}

func (x *StreamForexIndexServiceResponseDetail) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamForexIndexServiceResponseDetail.ProtoReflect.Descriptor instead.
func (*StreamForexIndexServiceResponseDetail) Descriptor() ([]byte, []int) {
	return file_sdk_stream_index_forex_rate_v1_response_proto_rawDescGZIP(), []int{2}
}

func (x *StreamForexIndexServiceResponseDetail) GetUnderlying() *StreamForexIndexDetail {
	if x != nil {
		return x.Underlying
	}
	return nil
}

func (x *StreamForexIndexServiceResponseDetail) GetFxrate() *StreamForexIndexDetail {
	if x != nil {
		return x.Fxrate
	}
	return nil
}

// StreamForexIndexServiceResponsePublic is public property involved in computation.
type StreamForexIndexServiceResponsePublic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Underlying.
	Underlying *StreamForexIndexPublic `protobuf:"bytes,1,opt,name=underlying,proto3" json:"underlying,omitempty"`
	// FxRate.
	Fxrate *StreamForexIndexPublic `protobuf:"bytes,2,opt,name=fxrate,proto3" json:"fxrate,omitempty"`
}

func (x *StreamForexIndexServiceResponsePublic) Reset() {
	*x = StreamForexIndexServiceResponsePublic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamForexIndexServiceResponsePublic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamForexIndexServiceResponsePublic) ProtoMessage() {}

func (x *StreamForexIndexServiceResponsePublic) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamForexIndexServiceResponsePublic.ProtoReflect.Descriptor instead.
func (*StreamForexIndexServiceResponsePublic) Descriptor() ([]byte, []int) {
	return file_sdk_stream_index_forex_rate_v1_response_proto_rawDescGZIP(), []int{3}
}

func (x *StreamForexIndexServiceResponsePublic) GetUnderlying() *StreamForexIndexPublic {
	if x != nil {
		return x.Underlying
	}
	return nil
}

func (x *StreamForexIndexServiceResponsePublic) GetFxrate() *StreamForexIndexPublic {
	if x != nil {
		return x.Fxrate
	}
	return nil
}

// StreamIndexForexRateServiceResponseV1
type StreamIndexForexRateServiceResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Index code.
	IndexCode string `protobuf:"bytes,1,opt,name=index_code,json=indexCode,proto3" json:"index_code,omitempty"`
	// Event type.
	Commodity index_v1.StreamIndexCommodity `protobuf:"varint,2,opt,name=commodity,proto3,enum=kaikosdk.StreamIndexCommodity" json:"commodity,omitempty"`
	// Data interval.
	Interval *core.DataInterval `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	// Coimposition of the forex rate.
	Composition *StreamForexIndexServiceResponsePublic `protobuf:"bytes,4,opt,name=composition,proto3" json:"composition,omitempty"`
	// Price.
	Price float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	// TSEvent
	TsEvent *timestamp.Timestamp `protobuf:"bytes,6,opt,name=ts_event,json=tsEvent,proto3" json:"ts_event,omitempty"`
	// Detail property.
	Detail *StreamForexIndexServiceResponseDetail `protobuf:"bytes,7,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *StreamIndexForexRateServiceResponseV1) Reset() {
	*x = StreamIndexForexRateServiceResponseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamIndexForexRateServiceResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIndexForexRateServiceResponseV1) ProtoMessage() {}

func (x *StreamIndexForexRateServiceResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIndexForexRateServiceResponseV1.ProtoReflect.Descriptor instead.
func (*StreamIndexForexRateServiceResponseV1) Descriptor() ([]byte, []int) {
	return file_sdk_stream_index_forex_rate_v1_response_proto_rawDescGZIP(), []int{4}
}

func (x *StreamIndexForexRateServiceResponseV1) GetIndexCode() string {
	if x != nil {
		return x.IndexCode
	}
	return ""
}

func (x *StreamIndexForexRateServiceResponseV1) GetCommodity() index_v1.StreamIndexCommodity {
	if x != nil {
		return x.Commodity
	}
	return index_v1.StreamIndexCommodity(0)
}

func (x *StreamIndexForexRateServiceResponseV1) GetInterval() *core.DataInterval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *StreamIndexForexRateServiceResponseV1) GetComposition() *StreamForexIndexServiceResponsePublic {
	if x != nil {
		return x.Composition
	}
	return nil
}

func (x *StreamIndexForexRateServiceResponseV1) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *StreamIndexForexRateServiceResponseV1) GetTsEvent() *timestamp.Timestamp {
	if x != nil {
		return x.TsEvent
	}
	return nil
}

func (x *StreamIndexForexRateServiceResponseV1) GetDetail() *StreamForexIndexServiceResponseDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

var File_sdk_stream_index_forex_rate_v1_response_proto protoreflect.FileDescriptor

var file_sdk_stream_index_forex_rate_v1_response_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x73, 0x64, 0x6b, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a,
	0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x65, 0x78, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x74,
	0x73, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0x79, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x65,
	0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x73, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xa3, 0x01,
	0x0a, 0x25, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x65, 0x78, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x40, 0x0a, 0x0a, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x61,
	0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72,
	0x65, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x78, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x61, 0x69, 0x6b,
	0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x65, 0x78,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x66, 0x78, 0x72,
	0x61, 0x74, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x25, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f,
	0x72, 0x65, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x40, 0x0a,
	0x0a, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x65, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x52, 0x0a, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x12,
	0x38, 0x0a, 0x06, 0x66, 0x78, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x46, 0x6f, 0x72, 0x65, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x52, 0x06, 0x66, 0x78, 0x72, 0x61, 0x74, 0x65, 0x22, 0xa1, 0x03, 0x0a, 0x25, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6f, 0x72, 0x65, 0x78, 0x52, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x56, 0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79,
	0x12, 0x32, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x51, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x61, 0x69, 0x6b,
	0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x65, 0x78,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x74, 0x73, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x73, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x65, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x98, 0x01,
	0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x66, 0x6f, 0x72,
	0x65, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x50, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x64, 0x61,
	0x74, 0x61, 0x2f, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x66, 0x6f, 0x72,
	0x65, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x31, 0x3b, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x66, 0x6f, 0x72, 0x65, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x31, 0xaa, 0x02,
	0x17, 0x4b, 0x61, 0x69, 0x6b, 0x6f, 0x53, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x46, 0x6f, 0x72, 0x65, 0x78, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sdk_stream_index_forex_rate_v1_response_proto_rawDescOnce sync.Once
	file_sdk_stream_index_forex_rate_v1_response_proto_rawDescData = file_sdk_stream_index_forex_rate_v1_response_proto_rawDesc
)

func file_sdk_stream_index_forex_rate_v1_response_proto_rawDescGZIP() []byte {
	file_sdk_stream_index_forex_rate_v1_response_proto_rawDescOnce.Do(func() {
		file_sdk_stream_index_forex_rate_v1_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_sdk_stream_index_forex_rate_v1_response_proto_rawDescData)
	})
	return file_sdk_stream_index_forex_rate_v1_response_proto_rawDescData
}

var file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_sdk_stream_index_forex_rate_v1_response_proto_goTypes = []interface{}{
	(*StreamForexIndexPublic)(nil),                // 0: kaikosdk.StreamForexIndexPublic
	(*StreamForexIndexDetail)(nil),                // 1: kaikosdk.StreamForexIndexDetail
	(*StreamForexIndexServiceResponseDetail)(nil), // 2: kaikosdk.StreamForexIndexServiceResponseDetail
	(*StreamForexIndexServiceResponsePublic)(nil), // 3: kaikosdk.StreamForexIndexServiceResponsePublic
	(*StreamIndexForexRateServiceResponseV1)(nil), // 4: kaikosdk.StreamIndexForexRateServiceResponseV1
	(*timestamp.Timestamp)(nil),                   // 5: google.protobuf.Timestamp
	(index_v1.StreamIndexCommodity)(0),            // 6: kaikosdk.StreamIndexCommodity
	(*core.DataInterval)(nil),                     // 7: kaikosdk.DataInterval
}
var file_sdk_stream_index_forex_rate_v1_response_proto_depIdxs = []int32{
	5,  // 0: kaikosdk.StreamForexIndexPublic.ts_event:type_name -> google.protobuf.Timestamp
	5,  // 1: kaikosdk.StreamForexIndexDetail.ts_event:type_name -> google.protobuf.Timestamp
	1,  // 2: kaikosdk.StreamForexIndexServiceResponseDetail.underlying:type_name -> kaikosdk.StreamForexIndexDetail
	1,  // 3: kaikosdk.StreamForexIndexServiceResponseDetail.fxrate:type_name -> kaikosdk.StreamForexIndexDetail
	0,  // 4: kaikosdk.StreamForexIndexServiceResponsePublic.underlying:type_name -> kaikosdk.StreamForexIndexPublic
	0,  // 5: kaikosdk.StreamForexIndexServiceResponsePublic.fxrate:type_name -> kaikosdk.StreamForexIndexPublic
	6,  // 6: kaikosdk.StreamIndexForexRateServiceResponseV1.commodity:type_name -> kaikosdk.StreamIndexCommodity
	7,  // 7: kaikosdk.StreamIndexForexRateServiceResponseV1.interval:type_name -> kaikosdk.DataInterval
	3,  // 8: kaikosdk.StreamIndexForexRateServiceResponseV1.composition:type_name -> kaikosdk.StreamForexIndexServiceResponsePublic
	5,  // 9: kaikosdk.StreamIndexForexRateServiceResponseV1.ts_event:type_name -> google.protobuf.Timestamp
	2,  // 10: kaikosdk.StreamIndexForexRateServiceResponseV1.detail:type_name -> kaikosdk.StreamForexIndexServiceResponseDetail
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_sdk_stream_index_forex_rate_v1_response_proto_init() }
func file_sdk_stream_index_forex_rate_v1_response_proto_init() {
	if File_sdk_stream_index_forex_rate_v1_response_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamForexIndexPublic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamForexIndexDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamForexIndexServiceResponseDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamForexIndexServiceResponsePublic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamIndexForexRateServiceResponseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sdk_stream_index_forex_rate_v1_response_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sdk_stream_index_forex_rate_v1_response_proto_goTypes,
		DependencyIndexes: file_sdk_stream_index_forex_rate_v1_response_proto_depIdxs,
		MessageInfos:      file_sdk_stream_index_forex_rate_v1_response_proto_msgTypes,
	}.Build()
	File_sdk_stream_index_forex_rate_v1_response_proto = out.File
	file_sdk_stream_index_forex_rate_v1_response_proto_rawDesc = nil
	file_sdk_stream_index_forex_rate_v1_response_proto_goTypes = nil
	file_sdk_stream_index_forex_rate_v1_response_proto_depIdxs = nil
}
