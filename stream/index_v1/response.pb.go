// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: sdk/stream/index_v1/response.proto

package index_v1

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	core "github.com/kaikodata/kaiko-go-sdk/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StreamIndexServiceResponsePercentage is computation result by percentage.
type StreamIndexServiceResponsePercentage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Percentage.
	Percentage float64 `protobuf:"fixed64,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	// Price computed for the whole percentage.
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	// Detailed computation by pairs.
	Pairs []*StreamIndexServiceResponsePairs `protobuf:"bytes,3,rep,name=pairs,proto3" json:"pairs,omitempty"`
}

func (x *StreamIndexServiceResponsePercentage) Reset() {
	*x = StreamIndexServiceResponsePercentage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_index_v1_response_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamIndexServiceResponsePercentage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIndexServiceResponsePercentage) ProtoMessage() {}

func (x *StreamIndexServiceResponsePercentage) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_index_v1_response_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIndexServiceResponsePercentage.ProtoReflect.Descriptor instead.
func (*StreamIndexServiceResponsePercentage) Descriptor() ([]byte, []int) {
	return file_sdk_stream_index_v1_response_proto_rawDescGZIP(), []int{0}
}

func (x *StreamIndexServiceResponsePercentage) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *StreamIndexServiceResponsePercentage) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *StreamIndexServiceResponsePercentage) GetPairs() []*StreamIndexServiceResponsePairs {
	if x != nil {
		return x.Pairs
	}
	return nil
}

// StreamIndexServiceResponsePairs is computation result by pairs.
type StreamIndexServiceResponsePairs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Pair.
	Pair string `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	// Weight (for multiple assets indices).
	Weight float64 `protobuf:"fixed64,2,opt,name=weight,proto3" json:"weight,omitempty"`
	// Detailed computation by instruments.
	Instruments []*StreamIndexServiceResponseInstruments `protobuf:"bytes,3,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *StreamIndexServiceResponsePairs) Reset() {
	*x = StreamIndexServiceResponsePairs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_index_v1_response_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamIndexServiceResponsePairs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIndexServiceResponsePairs) ProtoMessage() {}

func (x *StreamIndexServiceResponsePairs) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_index_v1_response_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIndexServiceResponsePairs.ProtoReflect.Descriptor instead.
func (*StreamIndexServiceResponsePairs) Descriptor() ([]byte, []int) {
	return file_sdk_stream_index_v1_response_proto_rawDescGZIP(), []int{1}
}

func (x *StreamIndexServiceResponsePairs) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *StreamIndexServiceResponsePairs) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *StreamIndexServiceResponsePairs) GetInstruments() []*StreamIndexServiceResponseInstruments {
	if x != nil {
		return x.Instruments
	}
	return nil
}

// StreamIndexServiceResponseInstruments is computation result by instruments.
type StreamIndexServiceResponseInstruments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Exchange.
	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	// Price.
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	// Volume.
	Volume float64 `protobuf:"fixed64,3,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *StreamIndexServiceResponseInstruments) Reset() {
	*x = StreamIndexServiceResponseInstruments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_index_v1_response_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamIndexServiceResponseInstruments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIndexServiceResponseInstruments) ProtoMessage() {}

func (x *StreamIndexServiceResponseInstruments) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_index_v1_response_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIndexServiceResponseInstruments.ProtoReflect.Descriptor instead.
func (*StreamIndexServiceResponseInstruments) Descriptor() ([]byte, []int) {
	return file_sdk_stream_index_v1_response_proto_rawDescGZIP(), []int{2}
}

func (x *StreamIndexServiceResponseInstruments) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *StreamIndexServiceResponseInstruments) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *StreamIndexServiceResponseInstruments) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

// StreamIndexServiceResponseBaseAsset is base asset involved in computation.
type StreamIndexServiceResponseBaseAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Asset.
	Asset string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	// Weight.
	Weight float64 `protobuf:"fixed64,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *StreamIndexServiceResponseBaseAsset) Reset() {
	*x = StreamIndexServiceResponseBaseAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_index_v1_response_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamIndexServiceResponseBaseAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIndexServiceResponseBaseAsset) ProtoMessage() {}

func (x *StreamIndexServiceResponseBaseAsset) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_index_v1_response_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIndexServiceResponseBaseAsset.ProtoReflect.Descriptor instead.
func (*StreamIndexServiceResponseBaseAsset) Descriptor() ([]byte, []int) {
	return file_sdk_stream_index_v1_response_proto_rawDescGZIP(), []int{3}
}

func (x *StreamIndexServiceResponseBaseAsset) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *StreamIndexServiceResponseBaseAsset) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

// StreamIndexServiceResponseV1
type StreamIndexServiceResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Index code.
	IndexCode string `protobuf:"bytes,1,opt,name=index_code,json=indexCode,proto3" json:"index_code,omitempty"`
	// Event type.
	Commodity StreamIndexCommodity `protobuf:"varint,2,opt,name=commodity,proto3,enum=kaikosdk.StreamIndexCommodity" json:"commodity,omitempty"`
	// Data interval.
	Interval *core.DataInterval `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	// Quote.
	Quote string `protobuf:"bytes,4,opt,name=quote,proto3" json:"quote,omitempty"`
	// Bases.
	Bases []*StreamIndexServiceResponseBaseAsset `protobuf:"bytes,5,rep,name=bases,proto3" json:"bases,omitempty"`
	// Exchanges.
	Exchanges []string `protobuf:"bytes,6,rep,name=exchanges,proto3" json:"exchanges,omitempty"`
	// Detailed computation by percentage.
	Percentages []*StreamIndexServiceResponsePercentage `protobuf:"bytes,7,rep,name=percentages,proto3" json:"percentages,omitempty"`
	// Event generation timestamp (event created by Kaiko), after normalization.
	TsEvent *timestamp.Timestamp `protobuf:"bytes,8,opt,name=ts_event,json=tsEvent,proto3" json:"ts_event,omitempty"`
}

func (x *StreamIndexServiceResponseV1) Reset() {
	*x = StreamIndexServiceResponseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_index_v1_response_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamIndexServiceResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIndexServiceResponseV1) ProtoMessage() {}

func (x *StreamIndexServiceResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_index_v1_response_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIndexServiceResponseV1.ProtoReflect.Descriptor instead.
func (*StreamIndexServiceResponseV1) Descriptor() ([]byte, []int) {
	return file_sdk_stream_index_v1_response_proto_rawDescGZIP(), []int{4}
}

func (x *StreamIndexServiceResponseV1) GetIndexCode() string {
	if x != nil {
		return x.IndexCode
	}
	return ""
}

func (x *StreamIndexServiceResponseV1) GetCommodity() StreamIndexCommodity {
	if x != nil {
		return x.Commodity
	}
	return StreamIndexCommodity_SIC_UNKNOWN
}

func (x *StreamIndexServiceResponseV1) GetInterval() *core.DataInterval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *StreamIndexServiceResponseV1) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *StreamIndexServiceResponseV1) GetBases() []*StreamIndexServiceResponseBaseAsset {
	if x != nil {
		return x.Bases
	}
	return nil
}

func (x *StreamIndexServiceResponseV1) GetExchanges() []string {
	if x != nil {
		return x.Exchanges
	}
	return nil
}

func (x *StreamIndexServiceResponseV1) GetPercentages() []*StreamIndexServiceResponsePercentage {
	if x != nil {
		return x.Percentages
	}
	return nil
}

func (x *StreamIndexServiceResponseV1) GetTsEvent() *timestamp.Timestamp {
	if x != nil {
		return x.TsEvent
	}
	return nil
}

var File_sdk_stream_index_v1_response_proto protoreflect.FileDescriptor

var file_sdk_stream_index_v1_response_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x73,
	0x64, 0x6b, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x24, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x05, 0x70, 0x61, 0x69,
	0x72, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x1f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x51, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73,
	0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x71, 0x0a, 0x25, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x23, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xb1, 0x03,
	0x0a, 0x1c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x05, 0x62, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x73,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x42, 0x77, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x76, 0x31, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x6b, 0x61, 0x69, 0x6b, 0x6f,
	0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x76, 0x31, 0x3b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x76, 0x31,
	0xaa, 0x02, 0x17, 0x4b, 0x61, 0x69, 0x6b, 0x6f, 0x53, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sdk_stream_index_v1_response_proto_rawDescOnce sync.Once
	file_sdk_stream_index_v1_response_proto_rawDescData = file_sdk_stream_index_v1_response_proto_rawDesc
)

func file_sdk_stream_index_v1_response_proto_rawDescGZIP() []byte {
	file_sdk_stream_index_v1_response_proto_rawDescOnce.Do(func() {
		file_sdk_stream_index_v1_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_sdk_stream_index_v1_response_proto_rawDescData)
	})
	return file_sdk_stream_index_v1_response_proto_rawDescData
}

var file_sdk_stream_index_v1_response_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_sdk_stream_index_v1_response_proto_goTypes = []interface{}{
	(*StreamIndexServiceResponsePercentage)(nil),  // 0: kaikosdk.StreamIndexServiceResponsePercentage
	(*StreamIndexServiceResponsePairs)(nil),       // 1: kaikosdk.StreamIndexServiceResponsePairs
	(*StreamIndexServiceResponseInstruments)(nil), // 2: kaikosdk.StreamIndexServiceResponseInstruments
	(*StreamIndexServiceResponseBaseAsset)(nil),   // 3: kaikosdk.StreamIndexServiceResponseBaseAsset
	(*StreamIndexServiceResponseV1)(nil),          // 4: kaikosdk.StreamIndexServiceResponseV1
	(StreamIndexCommodity)(0),                     // 5: kaikosdk.StreamIndexCommodity
	(*core.DataInterval)(nil),                     // 6: kaikosdk.DataInterval
	(*timestamp.Timestamp)(nil),                   // 7: google.protobuf.Timestamp
}
var file_sdk_stream_index_v1_response_proto_depIdxs = []int32{
	1, // 0: kaikosdk.StreamIndexServiceResponsePercentage.pairs:type_name -> kaikosdk.StreamIndexServiceResponsePairs
	2, // 1: kaikosdk.StreamIndexServiceResponsePairs.instruments:type_name -> kaikosdk.StreamIndexServiceResponseInstruments
	5, // 2: kaikosdk.StreamIndexServiceResponseV1.commodity:type_name -> kaikosdk.StreamIndexCommodity
	6, // 3: kaikosdk.StreamIndexServiceResponseV1.interval:type_name -> kaikosdk.DataInterval
	3, // 4: kaikosdk.StreamIndexServiceResponseV1.bases:type_name -> kaikosdk.StreamIndexServiceResponseBaseAsset
	0, // 5: kaikosdk.StreamIndexServiceResponseV1.percentages:type_name -> kaikosdk.StreamIndexServiceResponsePercentage
	7, // 6: kaikosdk.StreamIndexServiceResponseV1.ts_event:type_name -> google.protobuf.Timestamp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_sdk_stream_index_v1_response_proto_init() }
func file_sdk_stream_index_v1_response_proto_init() {
	if File_sdk_stream_index_v1_response_proto != nil {
		return
	}
	file_sdk_stream_index_v1_commodity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sdk_stream_index_v1_response_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamIndexServiceResponsePercentage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_stream_index_v1_response_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamIndexServiceResponsePairs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_stream_index_v1_response_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamIndexServiceResponseInstruments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_stream_index_v1_response_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamIndexServiceResponseBaseAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdk_stream_index_v1_response_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamIndexServiceResponseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sdk_stream_index_v1_response_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sdk_stream_index_v1_response_proto_goTypes,
		DependencyIndexes: file_sdk_stream_index_v1_response_proto_depIdxs,
		MessageInfos:      file_sdk_stream_index_v1_response_proto_msgTypes,
	}.Build()
	File_sdk_stream_index_v1_response_proto = out.File
	file_sdk_stream_index_v1_response_proto_rawDesc = nil
	file_sdk_stream_index_v1_response_proto_goTypes = nil
	file_sdk_stream_index_v1_response_proto_depIdxs = nil
}
