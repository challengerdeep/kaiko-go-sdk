// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: sdk/stream/market_update_v1/request.proto

package market_update_v1

import (
	core "github.com/challengerdeep/kaiko-go-sdk/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OrderbookSnapshotType
type StreamMarketUpdateRequestV1_OrderbookSnapshotType int32

const (
	// UNKNOWN means no snapshot is sent.
	StreamMarketUpdateRequestV1_UNKNOWN StreamMarketUpdateRequestV1_OrderbookSnapshotType = 0
	// TEN_PERCENT is ob10%.
	StreamMarketUpdateRequestV1_TEN_PERCENT StreamMarketUpdateRequestV1_OrderbookSnapshotType = 1
	// FULL is full orderbook.
	StreamMarketUpdateRequestV1_FULL StreamMarketUpdateRequestV1_OrderbookSnapshotType = 2
)

// Enum value maps for StreamMarketUpdateRequestV1_OrderbookSnapshotType.
var (
	StreamMarketUpdateRequestV1_OrderbookSnapshotType_name = map[int32]string{
		0: "UNKNOWN",
		1: "TEN_PERCENT",
		2: "FULL",
	}
	StreamMarketUpdateRequestV1_OrderbookSnapshotType_value = map[string]int32{
		"UNKNOWN":     0,
		"TEN_PERCENT": 1,
		"FULL":        2,
	}
)

func (x StreamMarketUpdateRequestV1_OrderbookSnapshotType) Enum() *StreamMarketUpdateRequestV1_OrderbookSnapshotType {
	p := new(StreamMarketUpdateRequestV1_OrderbookSnapshotType)
	*p = x
	return p
}

func (x StreamMarketUpdateRequestV1_OrderbookSnapshotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamMarketUpdateRequestV1_OrderbookSnapshotType) Descriptor() protoreflect.EnumDescriptor {
	return file_sdk_stream_market_update_v1_request_proto_enumTypes[0].Descriptor()
}

func (StreamMarketUpdateRequestV1_OrderbookSnapshotType) Type() protoreflect.EnumType {
	return &file_sdk_stream_market_update_v1_request_proto_enumTypes[0]
}

func (x StreamMarketUpdateRequestV1_OrderbookSnapshotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamMarketUpdateRequestV1_OrderbookSnapshotType.Descriptor instead.
func (StreamMarketUpdateRequestV1_OrderbookSnapshotType) EnumDescriptor() ([]byte, []int) {
	return file_sdk_stream_market_update_v1_request_proto_rawDescGZIP(), []int{0, 0}
}

// StreamMarketUpdateRequestV1
type StreamMarketUpdateRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// InstrumentCriteria is instrument exchange, class and code, wildcard (*) can be used.
	InstrumentCriteria *core.InstrumentCriteria `protobuf:"bytes,1,opt,name=instrument_criteria,json=instrumentCriteria,proto3" json:"instrument_criteria,omitempty"`
	// Enum indicating type of feed.
	Commodities []StreamMarketUpdateCommodity `protobuf:"varint,2,rep,packed,name=commodities,proto3,enum=kaikosdk.StreamMarketUpdateCommodity" json:"commodities,omitempty"`
	// Data interval. For historical data only.
	Interval *core.DataInterval `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	// SnapshotType is the type of snapshot if commodities contains orderbook.
	SnapshotType StreamMarketUpdateRequestV1_OrderbookSnapshotType `protobuf:"varint,4,opt,name=snapshot_type,json=snapshotType,proto3,enum=kaikosdk.StreamMarketUpdateRequestV1_OrderbookSnapshotType" json:"snapshot_type,omitempty"`
}

func (x *StreamMarketUpdateRequestV1) Reset() {
	*x = StreamMarketUpdateRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdk_stream_market_update_v1_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMarketUpdateRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMarketUpdateRequestV1) ProtoMessage() {}

func (x *StreamMarketUpdateRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_stream_market_update_v1_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMarketUpdateRequestV1.ProtoReflect.Descriptor instead.
func (*StreamMarketUpdateRequestV1) Descriptor() ([]byte, []int) {
	return file_sdk_stream_market_update_v1_request_proto_rawDescGZIP(), []int{0}
}

func (x *StreamMarketUpdateRequestV1) GetInstrumentCriteria() *core.InstrumentCriteria {
	if x != nil {
		return x.InstrumentCriteria
	}
	return nil
}

func (x *StreamMarketUpdateRequestV1) GetCommodities() []StreamMarketUpdateCommodity {
	if x != nil {
		return x.Commodities
	}
	return nil
}

func (x *StreamMarketUpdateRequestV1) GetInterval() *core.DataInterval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *StreamMarketUpdateRequestV1) GetSnapshotType() StreamMarketUpdateRequestV1_OrderbookSnapshotType {
	if x != nil {
		return x.SnapshotType
	}
	return StreamMarketUpdateRequestV1_UNKNOWN
}

var File_sdk_stream_market_update_v1_request_proto protoreflect.FileDescriptor

var file_sdk_stream_market_update_v1_request_proto_rawDesc = []byte{
	0x0a, 0x29, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6b, 0x61, 0x69,
	0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x1a, 0x1c, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x03, 0x0a, 0x1b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x56, 0x31, 0x12, 0x4d, 0x0a, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52,
	0x12, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x12, 0x47, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f,
	0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73, 0x64, 0x6b, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x60, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6b, 0x61, 0x69, 0x6b, 0x6f, 0x73,
	0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x3f, 0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x45, 0x4e, 0x5f,
	0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x55, 0x4c,
	0x4c, 0x10, 0x02, 0x42, 0x9b, 0x01, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x61, 0x69, 0x6b,
	0x6f, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x31, 0x50, 0x01, 0x5a,
	0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x64, 0x65, 0x65, 0x70, 0x2f, 0x6b, 0x61, 0x69, 0x6b, 0x6f,
	0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x31, 0x3b,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x31,
	0xaa, 0x02, 0x1e, 0x4b, 0x61, 0x69, 0x6b, 0x6f, 0x53, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sdk_stream_market_update_v1_request_proto_rawDescOnce sync.Once
	file_sdk_stream_market_update_v1_request_proto_rawDescData = file_sdk_stream_market_update_v1_request_proto_rawDesc
)

func file_sdk_stream_market_update_v1_request_proto_rawDescGZIP() []byte {
	file_sdk_stream_market_update_v1_request_proto_rawDescOnce.Do(func() {
		file_sdk_stream_market_update_v1_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_sdk_stream_market_update_v1_request_proto_rawDescData)
	})
	return file_sdk_stream_market_update_v1_request_proto_rawDescData
}

var file_sdk_stream_market_update_v1_request_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sdk_stream_market_update_v1_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sdk_stream_market_update_v1_request_proto_goTypes = []interface{}{
	(StreamMarketUpdateRequestV1_OrderbookSnapshotType)(0), // 0: kaikosdk.StreamMarketUpdateRequestV1.OrderbookSnapshotType
	(*StreamMarketUpdateRequestV1)(nil),                    // 1: kaikosdk.StreamMarketUpdateRequestV1
	(*core.InstrumentCriteria)(nil),                        // 2: kaikosdk.InstrumentCriteria
	(StreamMarketUpdateCommodity)(0),                       // 3: kaikosdk.StreamMarketUpdateCommodity
	(*core.DataInterval)(nil),                              // 4: kaikosdk.DataInterval
}
var file_sdk_stream_market_update_v1_request_proto_depIdxs = []int32{
	2, // 0: kaikosdk.StreamMarketUpdateRequestV1.instrument_criteria:type_name -> kaikosdk.InstrumentCriteria
	3, // 1: kaikosdk.StreamMarketUpdateRequestV1.commodities:type_name -> kaikosdk.StreamMarketUpdateCommodity
	4, // 2: kaikosdk.StreamMarketUpdateRequestV1.interval:type_name -> kaikosdk.DataInterval
	0, // 3: kaikosdk.StreamMarketUpdateRequestV1.snapshot_type:type_name -> kaikosdk.StreamMarketUpdateRequestV1.OrderbookSnapshotType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_sdk_stream_market_update_v1_request_proto_init() }
func file_sdk_stream_market_update_v1_request_proto_init() {
	if File_sdk_stream_market_update_v1_request_proto != nil {
		return
	}
	file_sdk_stream_market_update_v1_commodity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sdk_stream_market_update_v1_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMarketUpdateRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sdk_stream_market_update_v1_request_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sdk_stream_market_update_v1_request_proto_goTypes,
		DependencyIndexes: file_sdk_stream_market_update_v1_request_proto_depIdxs,
		EnumInfos:         file_sdk_stream_market_update_v1_request_proto_enumTypes,
		MessageInfos:      file_sdk_stream_market_update_v1_request_proto_msgTypes,
	}.Build()
	File_sdk_stream_market_update_v1_request_proto = out.File
	file_sdk_stream_market_update_v1_request_proto_rawDesc = nil
	file_sdk_stream_market_update_v1_request_proto_goTypes = nil
	file_sdk_stream_market_update_v1_request_proto_depIdxs = nil
}
